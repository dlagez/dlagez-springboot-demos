<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mybatis.mapper.UserMapper">
    <select id="selectById" resultType="sysUser">
        select * from sys_user where id = #{id}
    </select>

    <select id="selectAll" resultType="sysuser">
        select id,
               user_name,
               user_email,
               user_info,
               head_img,
               create_time
        from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="sysrole">
        select
            r.id,
            r.role_name,
            r.enabled,
            r.create_by,
            r.create_time,
            u.user_name as "user.userName",
            u.user_email as "user.userEmail"
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <!-- insert 方法   -->
    <insert id="insert">
        insert into sys_user (id, user_name, user_password, user_email, user_info, head_img, create_time)
        values (#{id}, #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg, jdbcType=BLOB},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <!-- 测试主键自增   sql语句去掉id字段-->
    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user (user_name, user_password, user_email, user_info, head_img, create_time)
        values (#{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg, jdbcType=BLOB},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <!--    update方法-->
    <update id="updateById">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg, jdbcType=BLOB},
            create_time = #{createTime, jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from sys_user where id = #{id}
    </delete>

    <!--  测试多个参数  -->
    <select id="selectRolesByUserIdAndRoleEnabled" resultType="sysrole">
        select r.id, r.role_name, r.enabled, r.create_by, r.create_time
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId} and r.enabled = #{enabled}
    </select>

    <!--     测试动态sql    -->
    <select id="selectByUser" resultType="sysuser">
        select id,user_name, user_password, user_email, user_info, head_img, create_time
        from sys_user
        <where>
            <if test="userName != null and userName != ''">
                and user_name like concat('%', #{userName}, "%")
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
        </where>
    </select>

    <update id="updateByIdSelective">
        update sys_user
        <set>
            <if test="userName != null and userName != ''" >
                user_name = #{userName},
            </if>
            <if test="userPassword != null and userPassword != ''" >
                user_password = #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test="userInfo != null and userInfo != ''">
                user_info = #{userInfo},
            </if>
            <if test="headImg != null">
                head_img = #{headImg, jdbcType=BLOB},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            id = #{id}
        where id = #{id}
        </set>
    </update>


    <select id="selectByIdOrUserName" resultType="sysuser">
        select id, user_name, user_password, user_email, user_info, head_img, create_time
        from sys_user
        where 1 = 1
        <choose>
            <when test="id != null">
                and id = #{id}
            </when>
            <when test="userName != null and userName != ''">
                and user_name = #{userName}
            </when>
            <otherwise>
                and 1 = 2
            </otherwise>
        </choose>
    </select>

    <!--  foreach循环的使用  -->
    <select id="selectByIdList" resultType="sysuser">
        select id, user_name, user_password, user_email, user_info, head_img, create_time
        from sys_user
        where id in
        <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
            #{id}
        </foreach>
    </select>

    <!--  forEach批量插入  -->
    <insert id="insertList">
        insert into sys_user(
            user_name, user_password, user_email, user_info, head_img, create_time
        )
        values
            <foreach collection="list" item="user" separator=",">
                (#{user.userName}, #{user.userPassword}, #{user.userEmail}, #{user.userInfo}, #{user.headImg, jdbcType=BLOB},
                #{user.createTime,jdbcType=TIMESTAMP})
            </foreach>
    </insert>

    <!--  foreach实现动态更新  -->
    <update id="updateByMap">
        update sys_user
        set
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        where id = #{id}
    </update>

</mapper>